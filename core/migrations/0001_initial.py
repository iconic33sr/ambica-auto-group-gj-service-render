# Generated by Django 4.2.6 on 2025-07-29 23:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accounting_Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ac_year', models.CharField(db_index=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('branch', models.CharField(max_length=500, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ('branch',),
            },
        ),
        migrations.CreateModel(
            name='Claim_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim', models.CharField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_Information_Report',
            fields=[
                ('cir_uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('short_job_no', models.CharField(max_length=20)),
                ('job_no', models.CharField(db_index=True, max_length=30, null=True)),
                ('vehicle_no', models.CharField(db_index=True, max_length=20, null=True)),
                ('chassis_no', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('kilometer', models.PositiveIntegerField(blank=True, null=True)),
                ('hours', models.PositiveIntegerField(blank=True, null=True)),
                ('sale_date', models.DateField(blank=True, null=True)),
                ('claim_category', models.JSONField(default=list)),
                ('vehicle_front_image', models.ImageField(blank=True, upload_to='vehicle_images/')),
                ('vehicle_with_number_plate', models.ImageField(blank=True, upload_to='vehicle_images/')),
                ('chasis', models.ImageField(blank=True, upload_to='vehicle_images/')),
                ('odometer', models.ImageField(blank=True, upload_to='vehicle_images/')),
                ('complaint_1', models.CharField(max_length=500, null=True)),
                ('complaint_1_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('complaint_2', models.CharField(blank=True, max_length=500)),
                ('complaint_2_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('complaint_3', models.CharField(blank=True, max_length=500)),
                ('complaint_3_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('complaint_4', models.CharField(blank=True, max_length=500)),
                ('complaint_4_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('complaint_5', models.CharField(blank=True, max_length=500)),
                ('complaint_5_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('complaint_6', models.CharField(blank=True, max_length=500)),
                ('complaint_6_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('complaint_7', models.CharField(blank=True, max_length=500)),
                ('complaint_7_image', models.ImageField(blank=True, null=True, upload_to='complaint_images/')),
                ('cir_date_time', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('cir_date', models.DateField(auto_now_add=True)),
                ('cir_time', models.TimeField(auto_now_add=True)),
                ('supervisor_name', models.CharField(blank=True, max_length=500)),
                ('supervisor_id', models.CharField(blank=True, max_length=200)),
                ('report_type', models.CharField(blank=True, db_index=True, default='new', max_length=50)),
                ('selected_advisor', models.CharField(blank=True, db_index=True, max_length=500)),
                ('sar_status', models.CharField(blank=True, db_index=True, default='pending', max_length=100)),
                ('advisor_preview', models.CharField(blank=True, default='pending', max_length=100)),
                ('selected_workshop_manager', models.CharField(blank=True, db_index=True, max_length=500)),
                ('workshop_manager_preview', models.CharField(blank=True, default='pending', max_length=100)),
                ('workshop_manager_verification', models.CharField(blank=True, db_index=True, default='pending', max_length=100)),
                ('workshop_manager_remark', models.CharField(blank=True, max_length=500)),
                ('workshop_manager_revision_remark', models.CharField(blank=True, max_length=500)),
                ('workshop_manager_name', models.CharField(blank=True, max_length=200)),
                ('workshop_manager_userid', models.CharField(blank=True, max_length=100)),
                ('workshop_manager_verification_date_time', models.DateTimeField(blank=True, null=True)),
                ('workshop_manager_verification_date', models.DateField(blank=True, null=True)),
                ('workshop_manager_verification_time', models.TimeField(blank=True, null=True)),
                ('selected_claim_manager', models.CharField(blank=True, db_index=True, max_length=500)),
                ('claim_manager_preview', models.CharField(blank=True, default='pending', max_length=100)),
                ('claim_manager_name', models.CharField(blank=True, max_length=500)),
                ('claim_manager_id', models.CharField(blank=True, max_length=200)),
                ('claim_manager_investigation', models.CharField(blank=True, max_length=1000)),
                ('claim_manager_action_taken', models.CharField(blank=True, max_length=1000)),
                ('claim_manager_last_save_date_time', models.DateTimeField(blank=True, null=True)),
                ('claim_manager_rejection', models.CharField(blank=True, max_length=20)),
                ('claim_manager_rejection_reason', models.CharField(blank=True, max_length=1000)),
                ('presentation_date_time', models.DateTimeField(blank=True, null=True)),
                ('presentation_date', models.DateField(blank=True, null=True)),
                ('presentation_time', models.TimeField(blank=True, null=True)),
                ('presentation_report', models.FileField(blank=True, null=True, upload_to='cir_presentations/')),
                ('presentation_report_status', models.CharField(blank=True, default='pending', max_length=100)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch')),
                ('cir_ac_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.accounting_year')),
            ],
            options={
                'ordering': ('cir_date_time',),
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scrap_List_Verification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('scrap_verification_ppt_file', models.FileField(null=True, upload_to='scrap_verification_ppt_files/')),
                ('back_office_operator_name', models.CharField(blank=True, max_length=200)),
                ('back_office_operator_id', models.CharField(blank=True, max_length=100)),
                ('scrap_verification_ppt_date_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('scrap_verification_ppt_date_time',),
            },
        ),
        migrations.CreateModel(
            name='Claim_Status',
            fields=[
                ('cir', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.customer_information_report')),
                ('claim_no', models.CharField(db_index=True, max_length=50)),
                ('claim_amount', models.CharField(blank=True, max_length=50)),
                ('claim_date', models.DateField(blank=True, null=True)),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('claim_settled_date', models.DateField(blank=True, null=True)),
                ('claim_status', models.CharField(blank=True, db_index=True, max_length=50)),
                ('crm_rejection_reason', models.CharField(blank=True, max_length=1000)),
                ('part_dispatch_image1', models.ImageField(blank=True, null=True, upload_to='parts_dispatch_images/')),
                ('part_dispatch_image2', models.ImageField(blank=True, null=True, upload_to='parts_dispatch_images/')),
                ('part_dispatch_image3', models.ImageField(blank=True, null=True, upload_to='parts_dispatch_images/')),
                ('part_dispatch_image4', models.ImageField(blank=True, null=True, upload_to='parts_dispatch_images/')),
                ('part_dispatch_image5', models.ImageField(blank=True, null=True, upload_to='parts_dispatch_images/')),
                ('acm_name', models.CharField(blank=True, max_length=200)),
                ('acm_id', models.CharField(blank=True, max_length=100)),
                ('part_dispatch_image_date_time', models.DateTimeField(blank=True, null=True)),
                ('part_dispatch_image_date', models.DateField(blank=True, null=True)),
                ('part_dispatch_image_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('cir__cir_date_time',),
            },
        ),
        migrations.CreateModel(
            name='Service_Advisor_Report',
            fields=[
                ('cir', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.customer_information_report')),
                ('first_service', models.BooleanField(blank=True, null=True, verbose_name='First Service')),
                ('first_service_remark', models.CharField(blank=True, max_length=200)),
                ('second_service', models.BooleanField(blank=True, null=True, verbose_name='Second Service')),
                ('second_service_remark', models.CharField(blank=True, max_length=200)),
                ('third_service', models.BooleanField(blank=True, null=True, verbose_name='Third Service')),
                ('third_service_remark', models.CharField(blank=True, max_length=200)),
                ('fourth_service', models.BooleanField(blank=True, null=True, verbose_name='Fourth Service')),
                ('fourth_service_remark', models.CharField(blank=True, max_length=200)),
                ('fifth_service', models.BooleanField(blank=True, null=True, verbose_name='Fifth Service')),
                ('fifth_service_remark', models.CharField(blank=True, max_length=200)),
                ('sixth_service', models.BooleanField(blank=True, null=True, verbose_name='Sixth Service')),
                ('sixth_service_remark', models.CharField(blank=True, max_length=200)),
                ('service_remark', models.CharField(blank=True, max_length=200, null=True)),
                ('faulty1_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_1', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty2_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_2', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty3_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_3', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty4_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_4', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty5_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_5', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty6_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_6', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty7_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_7', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty8_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_8', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty9_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_9', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty10_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_10', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty11_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_11', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty12_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_12', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty13_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_13', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty14_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_14', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('faulty15_description', models.CharField(blank=True, max_length=200)),
                ('faulty_image_15', models.ImageField(blank=True, null=True, upload_to='faulty_images/')),
                ('action_remark', models.CharField(blank=True, max_length=1000, null=True)),
                ('advisor_description', models.CharField(blank=True, max_length=1000)),
                ('advisor_name', models.CharField(blank=True, max_length=200)),
                ('advisor_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('sar_date_time', models.DateTimeField(blank=True, null=True)),
                ('sar_date', models.DateField(blank=True, null=True)),
                ('sar_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('sar_date_time',),
            },
        ),
        migrations.CreateModel(
            name='Vehicle_Gate_Entry',
            fields=[
                ('cir', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.customer_information_report')),
                ('gate_no', models.CharField(blank=True, max_length=10)),
                ('gate_pass_no', models.CharField(blank=True, max_length=10)),
                ('gate_pass_image', models.ImageField(blank=True, null=True, upload_to='vehicle_gate_entry_images/')),
                ('gate_register_image', models.ImageField(blank=True, null=True, upload_to='vehicle_gate_entry_images/')),
                ('security_officer_name', models.CharField(blank=True, max_length=200)),
                ('security_officer_id', models.CharField(blank=True, max_length=100)),
                ('vehicle_gate_entry_image_date_time', models.DateTimeField(blank=True, null=True)),
                ('vehicle_gate_entry_image_date', models.DateField(blank=True, null=True)),
                ('vehicle_gate_entry_image_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('cir__cir_date_time',),
            },
        ),
        migrations.CreateModel(
            name='User_Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mobile_no', models.BigIntegerField(blank=True, null=True)),
                ('mobile_no_2', models.BigIntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('state', models.CharField(blank=True, max_length=200)),
                ('alloted_advisor', models.CharField(blank=True, max_length=500)),
                ('alloted_workshop_manager', models.CharField(blank=True, max_length=500)),
                ('alloted_claim_manager', models.CharField(blank=True, max_length=500)),
                ('gate_no', models.CharField(blank=True, max_length=10)),
                ('user_branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch')),
                ('user_designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.designation')),
            ],
            options={
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='Scrap_List',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('doc_no', models.CharField(db_index=True, max_length=50)),
                ('plant', models.CharField(max_length=100)),
                ('total_prowacs_no', models.PositiveIntegerField(null=True)),
                ('req_sub_date', models.DateField(null=True)),
                ('list_gen_date', models.DateField(null=True)),
                ('total_parts', models.PositiveIntegerField(null=True)),
                ('scrap_list_pdf', models.FileField(null=True, upload_to='scrap_lists/')),
                ('list_verification_status', models.CharField(default='pending', max_length=30)),
                ('back_office_operator_name', models.CharField(blank=True, max_length=200)),
                ('back_office_operator_id', models.CharField(blank=True, max_length=100)),
                ('scrap_list_date_time', models.DateTimeField(blank=True, null=True)),
                ('linked_scrap_list_verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_scrap_lists', to='core.scrap_list_verification')),
                ('claim_status', models.ManyToManyField(blank=True, related_name='scrap_list', to='core.claim_status')),
            ],
            options={
                'ordering': ('scrap_list_date_time',),
            },
        ),
        migrations.CreateModel(
            name='Packing_Slip',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('delivery_challan_pdf', models.FileField(null=True, upload_to='delivery_challans/')),
                ('packing_slip_no', models.CharField(db_index=True, max_length=50)),
                ('place_of_supply', models.CharField(max_length=100)),
                ('total_prowacs_no', models.PositiveIntegerField(null=True)),
                ('packing_slip_date', models.DateField(null=True)),
                ('total_parts', models.PositiveIntegerField(null=True)),
                ('transport_name', models.CharField(max_length=500)),
                ('docket_no', models.CharField(max_length=50)),
                ('docket_date', models.DateField(null=True)),
                ('received_date', models.DateField(blank=True, null=True)),
                ('pod_pdf', models.FileField(blank=True, null=True, upload_to='pod_pdfs/')),
                ('back_office_operator_name', models.CharField(blank=True, max_length=200)),
                ('back_office_operator_id', models.CharField(blank=True, max_length=100)),
                ('packing_slip_date_time', models.DateTimeField(blank=True, null=True)),
                ('ps_claim_status', models.ManyToManyField(blank=True, related_name='packing_slip', to='core.claim_status')),
            ],
            options={
                'ordering': ('packing_slip_date_time',),
            },
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['job_no'], name='core_custom_job_no_b08b08_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['vehicle_no'], name='core_custom_vehicle_6b8fcf_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['selected_advisor'], name='core_custom_selecte_7acfea_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['selected_workshop_manager'], name='core_custom_selecte_90b822_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['selected_claim_manager'], name='core_custom_selecte_322338_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['sar_status', 'report_type'], name='core_custom_sar_sta_fb4759_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['branch'], name='core_custom_branch__e8347e_idx'),
        ),
        migrations.AddIndex(
            model_name='customer_information_report',
            index=models.Index(fields=['cir_date_time'], name='core_custom_cir_dat_6f6510_idx'),
        ),
    ]
